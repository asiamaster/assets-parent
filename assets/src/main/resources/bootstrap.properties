spring.profiles.active=${build.profile.id}
spring.application.name=assets-service
spring.cloud.nacos.config.enabled=true
spring.cloud.nacos.config.group=MICROSERVICE
spring.cloud.nacos.config.server-addr=10.28.12.131:8848
spring.cloud.nacos.config.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848
#spring.cloud.nacos.config.namespace=31098757-4ed1-4b43-8202-4534aa800f93

# 重试机制
#spring.cloud.loadbalancer.retry.enabled=true
#assets-service.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.ZoneAvoidanceRule
#assets-service.ribbon.ConnectTimeout=250
#assets-service.ribbon.ReadTimeout=2000
##对所有操作请求都进行重试
#assets-service.ribbon.OkToRetryOnAllOperations=true
##切换实例的重试次数
#assets-service.ribbon.MaxAutoRetriesNextServer=0
##对当前实例的重试次数
#assets-service.ribbon.MaxAutoRetries=1

#服务注册中心的配置
#spring.cloud.nacos.discovery.server-addr=10.28.12.131:8848
#spring.cloud.nacos.discovery.group=MICROSERVICE
#spring.cloud.nacos.discovery.namespace=54c39cfe-d1c4-4022-a94b-a3486c5927fc
#本机配置
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
#spring.cloud.nacos.discovery.namespace=31098757-4ed1-4b43-8202-4534aa800f93
#uap.contextPath=http://uap.diligrp.com

#redis.enable=true
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器地址
#spring.redis.host=10.28.12.200
## Redis服务器连接密码（默认为空）
#spring.redis.password=
## Redis服务器连接端口
#spring.redis.port=6379
#
## Lettuce
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.lettuce.pool.max-wait=10000
## 连接池中的最大空闲连接
#spring.redis.lettuce.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.lettuce.pool.min-idle=0
## 关闭超时时间
#spring.redis.lettuce.shutdown-timeout=100
