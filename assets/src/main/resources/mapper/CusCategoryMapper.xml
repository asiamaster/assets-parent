<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.assets.mapper.CusCategoryMapper">
    <resultMap id="BaseResultMap" type="com.dili.assets.domain.CusCategory">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="pingying" jdbcType="VARCHAR" property="pingying"/>
        <result column="py_initials" jdbcType="VARCHAR" property="pyInitials"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="parent" jdbcType="BIGINT" property="parent"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="keycode" jdbcType="VARCHAR" property="keycode"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="market_id" jdbcType="BIGINT" property="marketId"/>
        <result column="category_id" jdbcType="BIGINT" property="categoryId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, name, pingying, py_initials, state, parent, icon, path, keycode,market_id,category_id, icon, creator_id, create_time,
        modify_time
    </sql>

    <!-- 判定重复 -->
    <select id="exists" parameterType="com.dili.assets.domain.CusCategory" resultMap="BaseResultMap">
        select * from cus_category
        <where>
            `state`!=3
            <if test="name !=null and name !=''">
                and `name`=#{name}
            </if>
            <if test="keycode !=null and keycode !=''">
                and `keycode`=#{keycode}
            </if>
            <if test="marketId !=null">
                and `market_id`=#{marketId}
            </if>
        </where>
    </select>

    <update id="batchUpdate">
        update cus_category set state = #{value} where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="">
            #{item, jdbcType=BIGINT}
        </foreach>
    </update>


    <select id="listCategory" parameterType="com.dili.assets.sdk.dto.CusCategoryQuery" resultMap="BaseResultMap">
        select id, name, pingying, py_initials, state, parent, icon, path, keycode,market_id,category_id, icon, creator_id, create_time,
        modify_time from cus_category
        <where>
            `state`!=3
            <if test="keyword !=null and keyword !=''">
                and (`name` like CONCAT('%',#{keyword},'%') or `keycode` like CONCAT('%',#{keyword},'%') or `py_initials` like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="queryPath !=null and queryPath !=''">
                and (`path` like CONCAT(#{queryPath},'%'))
            </if>
            <if test="keycode !=null and keycode !=''">
                and `keycode`=#{keycode}
            </if>
            <if test="state !=null and state !=''">
                and `state`=#{state}
            </if>
            <if test="parent !=null">
                and `parent`=#{parent}
            </if>
            <if test="marketId !=null">
                and `market_id`=#{marketId}
            </if>
             <if test="ids !=null">
                 and id in
                 <foreach item="item" collection="ids" separator="," open="(" close=")" index="">
                     #{item, jdbcType=BIGINT}
                 </foreach>
            </if>
            <if test="marketIds !=null">
                and market_id in
                <foreach item="item" collection="marketIds" separator="," open="(" close=")" index="">
                    #{item, jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
    </select>
</mapper>